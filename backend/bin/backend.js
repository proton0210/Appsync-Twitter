"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const amplify_stack_1 = require("./../lib/stacks/AmplifyStack/amplify-stack");
const storage_stack_1 = require("./../lib/stacks/StorageStack/storage-stack");
const database_stack_1 = require("./../lib/stacks/DatabaseStack/database-stack");
const compute_stack_1 = require("./../lib/stacks/ComputeStack/compute-stack");
const user_pool_stack_1 = require("./../lib/stacks/CognitoStack/user-pool-stack");
const api_stack_1 = require("./../lib/stacks/API_STACK/api-stack");
// #!/usr/bin/env node
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
/*
 * First We Deploy the User Pool Stack to get the User Pool Id for Api Stack
 * Order Matters
 * User Pool for handling Signups and Logins and users
 * User Pool Client for Web ,Mobile Clients
 */
const app = new cdk.App();
const computeStack = new compute_stack_1.ComputeStack(app, 'ComputeStack');
const userPoolStack = new user_pool_stack_1.UserPoolStack(app, 'UserPoolStack', {
    postConfirmationHook: computeStack.postConfirmationHook
});
const dataBaseStack = new database_stack_1.DataBaseStack(app, 'DataBaseStack', {
    postConfirmationHook: computeStack.postConfirmationHook,
    distributedTweet: computeStack.distributedTweet,
    distributeTweetWithFollowers: computeStack.distributeTweetToFollowers,
    syncUserstoAlgolia: computeStack.syncUsersToAlgolia,
    syncTweetsToAlgolia: computeStack.syncTweetsToAlgolia,
    Notify: computeStack.Notify,
    NotifyLiked: computeStack.NotifyLiked,
    sendDirectMessage: computeStack.sendDirectMessage,
    NotifyDMed: computeStack.NotifyDMed
});
const apiStack = new api_stack_1.ApiStack(app, 'ApiStack', {
    userPool: userPoolStack.userPool,
    usersTable: dataBaseStack.usersTable.table,
    tweetsTable: dataBaseStack.tweetsTable.table,
    timelinesTable: dataBaseStack.timelinesTable.table,
    likesTable: dataBaseStack.likesTable.table,
    retweetsTable: dataBaseStack.retweetTable.table,
    relationshipsTable: dataBaseStack.relationShipsTable.table,
    notificationsTable: dataBaseStack.notificationsTable.table,
    conversationsTable: dataBaseStack.conversationsTable.table,
    directMessagesTable: dataBaseStack.directMessagesTable.table,
    directMesssageFunction: computeStack.sendDirectMessage
});
const storageStack = new storage_stack_1.StorageStack(app, 'StorageStack', {
    imageUploadFunction: apiStack.imageUploadFunction
});
const frontEndStack = new amplify_stack_1.AmplifyStack(app, 'AmplifyStack');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJhY2tlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4RUFBMEU7QUFDMUUsOEVBQTBFO0FBQzFFLGlGQUE2RTtBQUM3RSw4RUFBMEU7QUFDMUUsa0ZBQTZFO0FBQzdFLG1FQUErRDtBQUMvRCxzQkFBc0I7QUFFdEIsdUNBQXFDO0FBQ3JDLG1DQUFtQztBQUVuQzs7Ozs7R0FLRztBQUNILE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sWUFBWSxHQUFHLElBQUksNEJBQVksQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFDM0QsTUFBTSxhQUFhLEdBQUcsSUFBSSwrQkFBYSxDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUU7SUFDNUQsb0JBQW9CLEVBQUUsWUFBWSxDQUFDLG9CQUFvQjtDQUN4RCxDQUFDLENBQUM7QUFFSCxNQUFNLGFBQWEsR0FBRyxJQUFJLDhCQUFhLENBQUMsR0FBRyxFQUFFLGVBQWUsRUFBRTtJQUM1RCxvQkFBb0IsRUFBRSxZQUFZLENBQUMsb0JBQW9CO0lBQ3ZELGdCQUFnQixFQUFFLFlBQVksQ0FBQyxnQkFBZ0I7SUFDL0MsNEJBQTRCLEVBQUUsWUFBWSxDQUFDLDBCQUEwQjtJQUNyRSxrQkFBa0IsRUFBRSxZQUFZLENBQUMsa0JBQWtCO0lBQ25ELG1CQUFtQixFQUFFLFlBQVksQ0FBQyxtQkFBbUI7SUFDckQsTUFBTSxFQUFFLFlBQVksQ0FBQyxNQUFNO0lBQzNCLFdBQVcsRUFBRSxZQUFZLENBQUMsV0FBVztJQUNyQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsaUJBQWlCO0lBQ2pELFVBQVUsRUFBRSxZQUFZLENBQUMsVUFBVTtDQUNwQyxDQUFDLENBQUM7QUFFSCxNQUFNLFFBQVEsR0FBRyxJQUFJLG9CQUFRLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRTtJQUM3QyxRQUFRLEVBQUUsYUFBYSxDQUFDLFFBQVE7SUFDaEMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxVQUFVLENBQUMsS0FBSztJQUMxQyxXQUFXLEVBQUUsYUFBYSxDQUFDLFdBQVcsQ0FBQyxLQUFLO0lBQzVDLGNBQWMsRUFBRSxhQUFhLENBQUMsY0FBYyxDQUFDLEtBQUs7SUFDbEQsVUFBVSxFQUFFLGFBQWEsQ0FBQyxVQUFVLENBQUMsS0FBSztJQUMxQyxhQUFhLEVBQUUsYUFBYSxDQUFDLFlBQVksQ0FBQyxLQUFLO0lBQy9DLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLO0lBQzFELGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLO0lBQzFELGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLO0lBQzFELG1CQUFtQixFQUFFLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLO0lBQzVELHNCQUFzQixFQUFFLFlBQVksQ0FBQyxpQkFBaUI7Q0FDdkQsQ0FBQyxDQUFDO0FBRUgsTUFBTSxZQUFZLEdBQUcsSUFBSSw0QkFBWSxDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUU7SUFDekQsbUJBQW1CLEVBQUUsUUFBUSxDQUFDLG1CQUFtQjtDQUNsRCxDQUFDLENBQUM7QUFDSCxNQUFNLGFBQWEsR0FBRyxJQUFJLDRCQUFZLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQW1wbGlmeVN0YWNrIH0gZnJvbSAnLi8uLi9saWIvc3RhY2tzL0FtcGxpZnlTdGFjay9hbXBsaWZ5LXN0YWNrJztcbmltcG9ydCB7IFN0b3JhZ2VTdGFjayB9IGZyb20gJy4vLi4vbGliL3N0YWNrcy9TdG9yYWdlU3RhY2svc3RvcmFnZS1zdGFjayc7XG5pbXBvcnQgeyBEYXRhQmFzZVN0YWNrIH0gZnJvbSAnLi8uLi9saWIvc3RhY2tzL0RhdGFiYXNlU3RhY2svZGF0YWJhc2Utc3RhY2snO1xuaW1wb3J0IHsgQ29tcHV0ZVN0YWNrIH0gZnJvbSAnLi8uLi9saWIvc3RhY2tzL0NvbXB1dGVTdGFjay9jb21wdXRlLXN0YWNrJztcbmltcG9ydCB7IFVzZXJQb29sU3RhY2sgfSBmcm9tICcuLy4uL2xpYi9zdGFja3MvQ29nbml0b1N0YWNrL3VzZXItcG9vbC1zdGFjayc7XG5pbXBvcnQgeyBBcGlTdGFjayB9IGZyb20gJy4vLi4vbGliL3N0YWNrcy9BUElfU1RBQ0svYXBpLXN0YWNrJztcbi8vICMhL3Vzci9iaW4vZW52IG5vZGVcblxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcblxuLypcbiAqIEZpcnN0IFdlIERlcGxveSB0aGUgVXNlciBQb29sIFN0YWNrIHRvIGdldCB0aGUgVXNlciBQb29sIElkIGZvciBBcGkgU3RhY2tcbiAqIE9yZGVyIE1hdHRlcnNcbiAqIFVzZXIgUG9vbCBmb3IgaGFuZGxpbmcgU2lnbnVwcyBhbmQgTG9naW5zIGFuZCB1c2Vyc1xuICogVXNlciBQb29sIENsaWVudCBmb3IgV2ViICxNb2JpbGUgQ2xpZW50c1xuICovXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuY29uc3QgY29tcHV0ZVN0YWNrID0gbmV3IENvbXB1dGVTdGFjayhhcHAsICdDb21wdXRlU3RhY2snKTtcbmNvbnN0IHVzZXJQb29sU3RhY2sgPSBuZXcgVXNlclBvb2xTdGFjayhhcHAsICdVc2VyUG9vbFN0YWNrJywge1xuICBwb3N0Q29uZmlybWF0aW9uSG9vazogY29tcHV0ZVN0YWNrLnBvc3RDb25maXJtYXRpb25Ib29rXG59KTtcblxuY29uc3QgZGF0YUJhc2VTdGFjayA9IG5ldyBEYXRhQmFzZVN0YWNrKGFwcCwgJ0RhdGFCYXNlU3RhY2snLCB7XG4gIHBvc3RDb25maXJtYXRpb25Ib29rOiBjb21wdXRlU3RhY2sucG9zdENvbmZpcm1hdGlvbkhvb2ssXG4gIGRpc3RyaWJ1dGVkVHdlZXQ6IGNvbXB1dGVTdGFjay5kaXN0cmlidXRlZFR3ZWV0LFxuICBkaXN0cmlidXRlVHdlZXRXaXRoRm9sbG93ZXJzOiBjb21wdXRlU3RhY2suZGlzdHJpYnV0ZVR3ZWV0VG9Gb2xsb3dlcnMsXG4gIHN5bmNVc2Vyc3RvQWxnb2xpYTogY29tcHV0ZVN0YWNrLnN5bmNVc2Vyc1RvQWxnb2xpYSxcbiAgc3luY1R3ZWV0c1RvQWxnb2xpYTogY29tcHV0ZVN0YWNrLnN5bmNUd2VldHNUb0FsZ29saWEsXG4gIE5vdGlmeTogY29tcHV0ZVN0YWNrLk5vdGlmeSxcbiAgTm90aWZ5TGlrZWQ6IGNvbXB1dGVTdGFjay5Ob3RpZnlMaWtlZCxcbiAgc2VuZERpcmVjdE1lc3NhZ2U6IGNvbXB1dGVTdGFjay5zZW5kRGlyZWN0TWVzc2FnZSxcbiAgTm90aWZ5RE1lZDogY29tcHV0ZVN0YWNrLk5vdGlmeURNZWRcbn0pO1xuXG5jb25zdCBhcGlTdGFjayA9IG5ldyBBcGlTdGFjayhhcHAsICdBcGlTdGFjaycsIHtcbiAgdXNlclBvb2w6IHVzZXJQb29sU3RhY2sudXNlclBvb2wsXG4gIHVzZXJzVGFibGU6IGRhdGFCYXNlU3RhY2sudXNlcnNUYWJsZS50YWJsZSxcbiAgdHdlZXRzVGFibGU6IGRhdGFCYXNlU3RhY2sudHdlZXRzVGFibGUudGFibGUsXG4gIHRpbWVsaW5lc1RhYmxlOiBkYXRhQmFzZVN0YWNrLnRpbWVsaW5lc1RhYmxlLnRhYmxlLFxuICBsaWtlc1RhYmxlOiBkYXRhQmFzZVN0YWNrLmxpa2VzVGFibGUudGFibGUsXG4gIHJldHdlZXRzVGFibGU6IGRhdGFCYXNlU3RhY2sucmV0d2VldFRhYmxlLnRhYmxlLFxuICByZWxhdGlvbnNoaXBzVGFibGU6IGRhdGFCYXNlU3RhY2sucmVsYXRpb25TaGlwc1RhYmxlLnRhYmxlLFxuICBub3RpZmljYXRpb25zVGFibGU6IGRhdGFCYXNlU3RhY2subm90aWZpY2F0aW9uc1RhYmxlLnRhYmxlLFxuICBjb252ZXJzYXRpb25zVGFibGU6IGRhdGFCYXNlU3RhY2suY29udmVyc2F0aW9uc1RhYmxlLnRhYmxlLFxuICBkaXJlY3RNZXNzYWdlc1RhYmxlOiBkYXRhQmFzZVN0YWNrLmRpcmVjdE1lc3NhZ2VzVGFibGUudGFibGUsXG4gIGRpcmVjdE1lc3NzYWdlRnVuY3Rpb246IGNvbXB1dGVTdGFjay5zZW5kRGlyZWN0TWVzc2FnZVxufSk7XG5cbmNvbnN0IHN0b3JhZ2VTdGFjayA9IG5ldyBTdG9yYWdlU3RhY2soYXBwLCAnU3RvcmFnZVN0YWNrJywge1xuICBpbWFnZVVwbG9hZEZ1bmN0aW9uOiBhcGlTdGFjay5pbWFnZVVwbG9hZEZ1bmN0aW9uXG59KTtcbmNvbnN0IGZyb250RW5kU3RhY2sgPSBuZXcgQW1wbGlmeVN0YWNrKGFwcCwgJ0FtcGxpZnlTdGFjaycpO1xuIl19