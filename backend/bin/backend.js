"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const amplify_stack_1 = require("./../lib/stacks/AmplifyStack/amplify-stack");
const storage_stack_1 = require("./../lib/stacks/StorageStack/storage-stack");
const database_stack_1 = require("./../lib/stacks/DatabaseStack/database-stack");
const compute_stack_1 = require("./../lib/stacks/ComputeStack/compute-stack");
const user_pool_stack_1 = require("./../lib/stacks/CognitoStack/user-pool-stack");
const api_stack_1 = require("./../lib/stacks/API_STACK/api-stack");
// #!/usr/bin/env node
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
/*
 * First We Deploy the User Pool Stack to get the User Pool Id for Api Stack
 * Order Matters
 * User Pool for handling Signups and Logins and users
 * User Pool Client for Web ,Mobile Clients
 */
const app = new cdk.App();
const computeStack = new compute_stack_1.ComputeStack(app, 'ComputeStack');
const userPoolStack = new user_pool_stack_1.UserPoolStack(app, 'UserPoolStack', {
    postConfirmationHook: computeStack.postConfirmationHook
});
const dataBaseStack = new database_stack_1.DataBaseStack(app, 'DataBaseStack', {
    postConfirmationHook: computeStack.postConfirmationHook,
    distributedTweet: computeStack.distributedTweet,
    distributeTweetWithFollowers: computeStack.distributeTweetToFollowers,
    syncUserstoAlgolia: computeStack.syncUsersToAlgolia,
    syncTweetsToAlgolia: computeStack.syncTweetsToAlgolia,
    Notify: computeStack.Notify,
    NotifyLiked: computeStack.NotifyLiked,
    sendDirectMessage: computeStack.sendDirectMessage
});
const apiStack = new api_stack_1.ApiStack(app, 'ApiStack', {
    userPool: userPoolStack.userPool,
    usersTable: dataBaseStack.usersTable.table,
    tweetsTable: dataBaseStack.tweetsTable.table,
    timelinesTable: dataBaseStack.timelinesTable.table,
    likesTable: dataBaseStack.likesTable.table,
    retweetsTable: dataBaseStack.retweetTable.table,
    relationshipsTable: dataBaseStack.relationShipsTable.table,
    notificationsTable: dataBaseStack.notificationsTable.table,
    conversationsTable: dataBaseStack.conversationsTable.table,
    directMessagesTable: dataBaseStack.directMessagesTable.table,
    directMesssageFunction: computeStack.sendDirectMessage
});
const storageStack = new storage_stack_1.StorageStack(app, 'StorageStack', {
    imageUploadFunction: apiStack.imageUploadFunction
});
const frontEndStack = new amplify_stack_1.AmplifyStack(app, 'AmplifyStack');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJhY2tlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4RUFBMEU7QUFDMUUsOEVBQTBFO0FBQzFFLGlGQUE2RTtBQUM3RSw4RUFBMEU7QUFDMUUsa0ZBQTZFO0FBQzdFLG1FQUErRDtBQUMvRCxzQkFBc0I7QUFFdEIsdUNBQXFDO0FBQ3JDLG1DQUFtQztBQUVuQzs7Ozs7R0FLRztBQUNILE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sWUFBWSxHQUFHLElBQUksNEJBQVksQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFDM0QsTUFBTSxhQUFhLEdBQUcsSUFBSSwrQkFBYSxDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUU7SUFDNUQsb0JBQW9CLEVBQUUsWUFBWSxDQUFDLG9CQUFvQjtDQUN4RCxDQUFDLENBQUM7QUFFSCxNQUFNLGFBQWEsR0FBRyxJQUFJLDhCQUFhLENBQUMsR0FBRyxFQUFFLGVBQWUsRUFBRTtJQUM1RCxvQkFBb0IsRUFBRSxZQUFZLENBQUMsb0JBQW9CO0lBQ3ZELGdCQUFnQixFQUFFLFlBQVksQ0FBQyxnQkFBZ0I7SUFDL0MsNEJBQTRCLEVBQUUsWUFBWSxDQUFDLDBCQUEwQjtJQUNyRSxrQkFBa0IsRUFBRSxZQUFZLENBQUMsa0JBQWtCO0lBQ25ELG1CQUFtQixFQUFFLFlBQVksQ0FBQyxtQkFBbUI7SUFDckQsTUFBTSxFQUFFLFlBQVksQ0FBQyxNQUFNO0lBQzNCLFdBQVcsRUFBRSxZQUFZLENBQUMsV0FBVztJQUNyQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsaUJBQWlCO0NBQ2xELENBQUMsQ0FBQztBQUVILE1BQU0sUUFBUSxHQUFHLElBQUksb0JBQVEsQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFO0lBQzdDLFFBQVEsRUFBRSxhQUFhLENBQUMsUUFBUTtJQUNoQyxVQUFVLEVBQUUsYUFBYSxDQUFDLFVBQVUsQ0FBQyxLQUFLO0lBQzFDLFdBQVcsRUFBRSxhQUFhLENBQUMsV0FBVyxDQUFDLEtBQUs7SUFDNUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxjQUFjLENBQUMsS0FBSztJQUNsRCxVQUFVLEVBQUUsYUFBYSxDQUFDLFVBQVUsQ0FBQyxLQUFLO0lBQzFDLGFBQWEsRUFBRSxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUs7SUFDL0Msa0JBQWtCLEVBQUUsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEtBQUs7SUFDMUQsa0JBQWtCLEVBQUUsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEtBQUs7SUFDMUQsa0JBQWtCLEVBQUUsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEtBQUs7SUFDMUQsbUJBQW1CLEVBQUUsYUFBYSxDQUFDLG1CQUFtQixDQUFDLEtBQUs7SUFDNUQsc0JBQXNCLEVBQUUsWUFBWSxDQUFDLGlCQUFpQjtDQUN2RCxDQUFDLENBQUM7QUFFSCxNQUFNLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRTtJQUN6RCxtQkFBbUIsRUFBRSxRQUFRLENBQUMsbUJBQW1CO0NBQ2xELENBQUMsQ0FBQztBQUNILE1BQU0sYUFBYSxHQUFHLElBQUksNEJBQVksQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBbXBsaWZ5U3RhY2sgfSBmcm9tICcuLy4uL2xpYi9zdGFja3MvQW1wbGlmeVN0YWNrL2FtcGxpZnktc3RhY2snO1xuaW1wb3J0IHsgU3RvcmFnZVN0YWNrIH0gZnJvbSAnLi8uLi9saWIvc3RhY2tzL1N0b3JhZ2VTdGFjay9zdG9yYWdlLXN0YWNrJztcbmltcG9ydCB7IERhdGFCYXNlU3RhY2sgfSBmcm9tICcuLy4uL2xpYi9zdGFja3MvRGF0YWJhc2VTdGFjay9kYXRhYmFzZS1zdGFjayc7XG5pbXBvcnQgeyBDb21wdXRlU3RhY2sgfSBmcm9tICcuLy4uL2xpYi9zdGFja3MvQ29tcHV0ZVN0YWNrL2NvbXB1dGUtc3RhY2snO1xuaW1wb3J0IHsgVXNlclBvb2xTdGFjayB9IGZyb20gJy4vLi4vbGliL3N0YWNrcy9Db2duaXRvU3RhY2svdXNlci1wb29sLXN0YWNrJztcbmltcG9ydCB7IEFwaVN0YWNrIH0gZnJvbSAnLi8uLi9saWIvc3RhY2tzL0FQSV9TVEFDSy9hcGktc3RhY2snO1xuLy8gIyEvdXNyL2Jpbi9lbnYgbm9kZVxuXG5pbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuXG4vKlxuICogRmlyc3QgV2UgRGVwbG95IHRoZSBVc2VyIFBvb2wgU3RhY2sgdG8gZ2V0IHRoZSBVc2VyIFBvb2wgSWQgZm9yIEFwaSBTdGFja1xuICogT3JkZXIgTWF0dGVyc1xuICogVXNlciBQb29sIGZvciBoYW5kbGluZyBTaWdudXBzIGFuZCBMb2dpbnMgYW5kIHVzZXJzXG4gKiBVc2VyIFBvb2wgQ2xpZW50IGZvciBXZWIgLE1vYmlsZSBDbGllbnRzXG4gKi9cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5jb25zdCBjb21wdXRlU3RhY2sgPSBuZXcgQ29tcHV0ZVN0YWNrKGFwcCwgJ0NvbXB1dGVTdGFjaycpO1xuY29uc3QgdXNlclBvb2xTdGFjayA9IG5ldyBVc2VyUG9vbFN0YWNrKGFwcCwgJ1VzZXJQb29sU3RhY2snLCB7XG4gIHBvc3RDb25maXJtYXRpb25Ib29rOiBjb21wdXRlU3RhY2sucG9zdENvbmZpcm1hdGlvbkhvb2tcbn0pO1xuXG5jb25zdCBkYXRhQmFzZVN0YWNrID0gbmV3IERhdGFCYXNlU3RhY2soYXBwLCAnRGF0YUJhc2VTdGFjaycsIHtcbiAgcG9zdENvbmZpcm1hdGlvbkhvb2s6IGNvbXB1dGVTdGFjay5wb3N0Q29uZmlybWF0aW9uSG9vayxcbiAgZGlzdHJpYnV0ZWRUd2VldDogY29tcHV0ZVN0YWNrLmRpc3RyaWJ1dGVkVHdlZXQsXG4gIGRpc3RyaWJ1dGVUd2VldFdpdGhGb2xsb3dlcnM6IGNvbXB1dGVTdGFjay5kaXN0cmlidXRlVHdlZXRUb0ZvbGxvd2VycyxcbiAgc3luY1VzZXJzdG9BbGdvbGlhOiBjb21wdXRlU3RhY2suc3luY1VzZXJzVG9BbGdvbGlhLFxuICBzeW5jVHdlZXRzVG9BbGdvbGlhOiBjb21wdXRlU3RhY2suc3luY1R3ZWV0c1RvQWxnb2xpYSxcbiAgTm90aWZ5OiBjb21wdXRlU3RhY2suTm90aWZ5LFxuICBOb3RpZnlMaWtlZDogY29tcHV0ZVN0YWNrLk5vdGlmeUxpa2VkLFxuICBzZW5kRGlyZWN0TWVzc2FnZTogY29tcHV0ZVN0YWNrLnNlbmREaXJlY3RNZXNzYWdlXG59KTtcblxuY29uc3QgYXBpU3RhY2sgPSBuZXcgQXBpU3RhY2soYXBwLCAnQXBpU3RhY2snLCB7XG4gIHVzZXJQb29sOiB1c2VyUG9vbFN0YWNrLnVzZXJQb29sLFxuICB1c2Vyc1RhYmxlOiBkYXRhQmFzZVN0YWNrLnVzZXJzVGFibGUudGFibGUsXG4gIHR3ZWV0c1RhYmxlOiBkYXRhQmFzZVN0YWNrLnR3ZWV0c1RhYmxlLnRhYmxlLFxuICB0aW1lbGluZXNUYWJsZTogZGF0YUJhc2VTdGFjay50aW1lbGluZXNUYWJsZS50YWJsZSxcbiAgbGlrZXNUYWJsZTogZGF0YUJhc2VTdGFjay5saWtlc1RhYmxlLnRhYmxlLFxuICByZXR3ZWV0c1RhYmxlOiBkYXRhQmFzZVN0YWNrLnJldHdlZXRUYWJsZS50YWJsZSxcbiAgcmVsYXRpb25zaGlwc1RhYmxlOiBkYXRhQmFzZVN0YWNrLnJlbGF0aW9uU2hpcHNUYWJsZS50YWJsZSxcbiAgbm90aWZpY2F0aW9uc1RhYmxlOiBkYXRhQmFzZVN0YWNrLm5vdGlmaWNhdGlvbnNUYWJsZS50YWJsZSxcbiAgY29udmVyc2F0aW9uc1RhYmxlOiBkYXRhQmFzZVN0YWNrLmNvbnZlcnNhdGlvbnNUYWJsZS50YWJsZSxcbiAgZGlyZWN0TWVzc2FnZXNUYWJsZTogZGF0YUJhc2VTdGFjay5kaXJlY3RNZXNzYWdlc1RhYmxlLnRhYmxlLFxuICBkaXJlY3RNZXNzc2FnZUZ1bmN0aW9uOiBjb21wdXRlU3RhY2suc2VuZERpcmVjdE1lc3NhZ2Vcbn0pO1xuXG5jb25zdCBzdG9yYWdlU3RhY2sgPSBuZXcgU3RvcmFnZVN0YWNrKGFwcCwgJ1N0b3JhZ2VTdGFjaycsIHtcbiAgaW1hZ2VVcGxvYWRGdW5jdGlvbjogYXBpU3RhY2suaW1hZ2VVcGxvYWRGdW5jdGlvblxufSk7XG5jb25zdCBmcm9udEVuZFN0YWNrID0gbmV3IEFtcGxpZnlTdGFjayhhcHAsICdBbXBsaWZ5U3RhY2snKTtcbiJdfQ==