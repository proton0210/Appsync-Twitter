"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComputeStack = void 0;
const SendDirectMessage_1 = require("./Constructs/SendDirectMessage");
const NotifyLiked_1 = require("./Constructs/NotifyLiked");
const SyncTweetsToAlgolia_1 = require("./Constructs/SyncTweetsToAlgolia");
const SyncUsersToAlgolia_1 = require("./Constructs/SyncUsersToAlgolia");
const Distribute_Tweet_To_Followers_1 = require("./Constructs/Distribute-Tweet-To-Followers");
const Distribute_Tweet_1 = require("./Constructs/Distribute-Tweet");
const confirm_user_1 = require("./Constructs/confirm-user");
const cdk = require("aws-cdk-lib");
const Notify_1 = require("./Constructs/Notify");
const NotifyDmed_1 = require("./Constructs/NotifyDmed");
class ComputeStack extends cdk.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const confirmUserSignUpTrigger = new confirm_user_1.ConfirmUserSignUp(this, 'ConfirmUserSignUp');
        const distributedTweet = new Distribute_Tweet_1.DistributeTweet(this, 'DistributeTweet');
        const distributeTweetToFollowers = new Distribute_Tweet_To_Followers_1.DistributeTweetsToFollowers(this, 'DistributeTweetToFollowers');
        const syncUsersToAlgolia = new SyncUsersToAlgolia_1.SyncUsersToAlgolia(this, 'SyncUsersToAlgolia');
        const syncTweetsToAlgolia = new SyncTweetsToAlgolia_1.SyncTweetsToAlgolia(this, 'SyncTweetsToAlgolia');
        const notify = new Notify_1.Notify(this, 'Notify');
        const notifyLiked = new NotifyLiked_1.NotifyLiked(this, 'NotifyLiked');
        const notifyDmed = new NotifyDmed_1.NotifyDMed(this, 'NotifyDMed');
        const sendDirectMessage = new SendDirectMessage_1.SendDirectMessage(this, 'SendDirectMessage');
        this.postConfirmationHook = confirmUserSignUpTrigger.confirmUserSignUp;
        this.distributedTweet = distributedTweet.DistributeTweet;
        this.distributeTweetToFollowers =
            distributeTweetToFollowers.DistributeTweetsToFollowers;
        this.syncUsersToAlgolia = syncUsersToAlgolia.SyncUsersToAlgolia;
        this.syncTweetsToAlgolia = syncTweetsToAlgolia.SyncTweetsToAlgolia;
        this.Notify = notify.Notify;
        this.NotifyLiked = notifyLiked.NotifyLiked;
        this.NotifyDMed = notifyDmed.NotifyDMed;
        this.sendDirectMessage = sendDirectMessage.SendDirectMessagefunction;
    }
}
exports.ComputeStack = ComputeStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1zdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvbXB1dGUtc3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsc0VBQW1FO0FBQ25FLDBEQUF1RDtBQUN2RCwwRUFBdUU7QUFDdkUsd0VBQXFFO0FBQ3JFLDhGQUF5RjtBQUN6RixvRUFBZ0U7QUFDaEUsNERBQThEO0FBQzlELG1DQUFtQztBQUVuQyxnREFBNkM7QUFDN0Msd0RBQXFEO0FBRXJELE1BQWEsWUFBYSxTQUFRLEdBQUcsQ0FBQyxLQUFLO0lBV3pDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBc0I7UUFDOUQsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEIsTUFBTSx3QkFBd0IsR0FBRyxJQUFJLGdDQUFpQixDQUNwRCxJQUFJLEVBQ0osbUJBQW1CLENBQ3BCLENBQUM7UUFDRixNQUFNLGdCQUFnQixHQUFHLElBQUksa0NBQWUsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUN0RSxNQUFNLDBCQUEwQixHQUFHLElBQUksMkRBQTJCLENBQ2hFLElBQUksRUFDSiw0QkFBNEIsQ0FDN0IsQ0FBQztRQUVGLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSx1Q0FBa0IsQ0FDL0MsSUFBSSxFQUNKLG9CQUFvQixDQUNyQixDQUFDO1FBRUYsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLHlDQUFtQixDQUNqRCxJQUFJLEVBQ0oscUJBQXFCLENBQ3RCLENBQUM7UUFFRixNQUFNLE1BQU0sR0FBRyxJQUFJLGVBQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFMUMsTUFBTSxXQUFXLEdBQUcsSUFBSSx5QkFBVyxDQUFDLElBQUksRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN6RCxNQUFNLFVBQVUsR0FBRyxJQUFJLHVCQUFVLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3RELE1BQU0saUJBQWlCLEdBQUcsSUFBSSxxQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUUzRSxJQUFJLENBQUMsb0JBQW9CLEdBQUcsd0JBQXdCLENBQUMsaUJBQWlCLENBQUM7UUFDdkUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDLGVBQWUsQ0FBQztRQUN6RCxJQUFJLENBQUMsMEJBQTBCO1lBQzdCLDBCQUEwQixDQUFDLDJCQUEyQixDQUFDO1FBQ3pELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQztRQUNoRSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUMsbUJBQW1CLENBQUM7UUFDbkUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDLFdBQVcsQ0FBQztRQUMzQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUM7UUFDeEMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDO0lBQ3ZFLENBQUM7Q0FDRjtBQWxERCxvQ0FrREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZW5kRGlyZWN0TWVzc2FnZSB9IGZyb20gJy4vQ29uc3RydWN0cy9TZW5kRGlyZWN0TWVzc2FnZSc7XG5pbXBvcnQgeyBOb3RpZnlMaWtlZCB9IGZyb20gJy4vQ29uc3RydWN0cy9Ob3RpZnlMaWtlZCc7XG5pbXBvcnQgeyBTeW5jVHdlZXRzVG9BbGdvbGlhIH0gZnJvbSAnLi9Db25zdHJ1Y3RzL1N5bmNUd2VldHNUb0FsZ29saWEnO1xuaW1wb3J0IHsgU3luY1VzZXJzVG9BbGdvbGlhIH0gZnJvbSAnLi9Db25zdHJ1Y3RzL1N5bmNVc2Vyc1RvQWxnb2xpYSc7XG5pbXBvcnQgeyBEaXN0cmlidXRlVHdlZXRzVG9Gb2xsb3dlcnMgfSBmcm9tICcuL0NvbnN0cnVjdHMvRGlzdHJpYnV0ZS1Ud2VldC1Uby1Gb2xsb3dlcnMnO1xuaW1wb3J0IHsgRGlzdHJpYnV0ZVR3ZWV0IH0gZnJvbSAnLi9Db25zdHJ1Y3RzL0Rpc3RyaWJ1dGUtVHdlZXQnO1xuaW1wb3J0IHsgQ29uZmlybVVzZXJTaWduVXAgfSBmcm9tICcuL0NvbnN0cnVjdHMvY29uZmlybS11c2VyJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IE5vdGlmeSB9IGZyb20gJy4vQ29uc3RydWN0cy9Ob3RpZnknO1xuaW1wb3J0IHsgTm90aWZ5RE1lZCB9IGZyb20gJy4vQ29uc3RydWN0cy9Ob3RpZnlEbWVkJztcblxuZXhwb3J0IGNsYXNzIENvbXB1dGVTdGFjayBleHRlbmRzIGNkay5TdGFjayB7XG4gIHB1YmxpYyByZWFkb25seSBwb3N0Q29uZmlybWF0aW9uSG9vazogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uO1xuICBwdWJsaWMgcmVhZG9ubHkgZGlzdHJpYnV0ZWRUd2VldDogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uO1xuICBwdWJsaWMgcmVhZG9ubHkgZGlzdHJpYnV0ZVR3ZWV0VG9Gb2xsb3dlcnM6IGNkay5hd3NfbGFtYmRhX25vZGVqcy5Ob2RlanNGdW5jdGlvbjtcbiAgcHVibGljIHJlYWRvbmx5IE5vdGlmeTogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uO1xuICBwdWJsaWMgcmVhZG9ubHkgTm90aWZ5TGlrZWQ6IGNkay5hd3NfbGFtYmRhX25vZGVqcy5Ob2RlanNGdW5jdGlvbjtcbiAgcHVibGljIHJlYWRvbmx5IE5vdGlmeURNZWQ6IGNkay5hd3NfbGFtYmRhX25vZGVqcy5Ob2RlanNGdW5jdGlvbjtcbiAgcHVibGljIHJlYWRvbmx5IHN5bmNVc2Vyc1RvQWxnb2xpYTogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uO1xuICBwdWJsaWMgcmVhZG9ubHkgc3luY1R3ZWV0c1RvQWxnb2xpYTogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uO1xuICBwdWJsaWMgcmVhZG9ubHkgc2VuZERpcmVjdE1lc3NhZ2U6IGNkay5hd3NfbGFtYmRhX25vZGVqcy5Ob2RlanNGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wcz86IGNkay5TdGFja1Byb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG4gICAgY29uc3QgY29uZmlybVVzZXJTaWduVXBUcmlnZ2VyID0gbmV3IENvbmZpcm1Vc2VyU2lnblVwKFxuICAgICAgdGhpcyxcbiAgICAgICdDb25maXJtVXNlclNpZ25VcCdcbiAgICApO1xuICAgIGNvbnN0IGRpc3RyaWJ1dGVkVHdlZXQgPSBuZXcgRGlzdHJpYnV0ZVR3ZWV0KHRoaXMsICdEaXN0cmlidXRlVHdlZXQnKTtcbiAgICBjb25zdCBkaXN0cmlidXRlVHdlZXRUb0ZvbGxvd2VycyA9IG5ldyBEaXN0cmlidXRlVHdlZXRzVG9Gb2xsb3dlcnMoXG4gICAgICB0aGlzLFxuICAgICAgJ0Rpc3RyaWJ1dGVUd2VldFRvRm9sbG93ZXJzJ1xuICAgICk7XG5cbiAgICBjb25zdCBzeW5jVXNlcnNUb0FsZ29saWEgPSBuZXcgU3luY1VzZXJzVG9BbGdvbGlhKFxuICAgICAgdGhpcyxcbiAgICAgICdTeW5jVXNlcnNUb0FsZ29saWEnXG4gICAgKTtcblxuICAgIGNvbnN0IHN5bmNUd2VldHNUb0FsZ29saWEgPSBuZXcgU3luY1R3ZWV0c1RvQWxnb2xpYShcbiAgICAgIHRoaXMsXG4gICAgICAnU3luY1R3ZWV0c1RvQWxnb2xpYSdcbiAgICApO1xuXG4gICAgY29uc3Qgbm90aWZ5ID0gbmV3IE5vdGlmeSh0aGlzLCAnTm90aWZ5Jyk7XG5cbiAgICBjb25zdCBub3RpZnlMaWtlZCA9IG5ldyBOb3RpZnlMaWtlZCh0aGlzLCAnTm90aWZ5TGlrZWQnKTtcbiAgICBjb25zdCBub3RpZnlEbWVkID0gbmV3IE5vdGlmeURNZWQodGhpcywgJ05vdGlmeURNZWQnKTtcbiAgICBjb25zdCBzZW5kRGlyZWN0TWVzc2FnZSA9IG5ldyBTZW5kRGlyZWN0TWVzc2FnZSh0aGlzLCAnU2VuZERpcmVjdE1lc3NhZ2UnKTtcblxuICAgIHRoaXMucG9zdENvbmZpcm1hdGlvbkhvb2sgPSBjb25maXJtVXNlclNpZ25VcFRyaWdnZXIuY29uZmlybVVzZXJTaWduVXA7XG4gICAgdGhpcy5kaXN0cmlidXRlZFR3ZWV0ID0gZGlzdHJpYnV0ZWRUd2VldC5EaXN0cmlidXRlVHdlZXQ7XG4gICAgdGhpcy5kaXN0cmlidXRlVHdlZXRUb0ZvbGxvd2VycyA9XG4gICAgICBkaXN0cmlidXRlVHdlZXRUb0ZvbGxvd2Vycy5EaXN0cmlidXRlVHdlZXRzVG9Gb2xsb3dlcnM7XG4gICAgdGhpcy5zeW5jVXNlcnNUb0FsZ29saWEgPSBzeW5jVXNlcnNUb0FsZ29saWEuU3luY1VzZXJzVG9BbGdvbGlhO1xuICAgIHRoaXMuc3luY1R3ZWV0c1RvQWxnb2xpYSA9IHN5bmNUd2VldHNUb0FsZ29saWEuU3luY1R3ZWV0c1RvQWxnb2xpYTtcbiAgICB0aGlzLk5vdGlmeSA9IG5vdGlmeS5Ob3RpZnk7XG4gICAgdGhpcy5Ob3RpZnlMaWtlZCA9IG5vdGlmeUxpa2VkLk5vdGlmeUxpa2VkO1xuICAgIHRoaXMuTm90aWZ5RE1lZCA9IG5vdGlmeURtZWQuTm90aWZ5RE1lZDtcbiAgICB0aGlzLnNlbmREaXJlY3RNZXNzYWdlID0gc2VuZERpcmVjdE1lc3NhZ2UuU2VuZERpcmVjdE1lc3NhZ2VmdW5jdGlvbjtcbiAgfVxufVxuIl19