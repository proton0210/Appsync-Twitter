"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataBaseStack = void 0;
const RelationshipsTable_1 = require("./Constructs/RelationshipsTable");
const RetweetsTable_1 = require("./Constructs/RetweetsTable");
const LikesTable_1 = require("./Constructs/LikesTable");
const TweetsTable_1 = require("./Constructs/TweetsTable");
const cdk = require("aws-cdk-lib");
const eventsources = require("aws-cdk-lib/aws-lambda-event-sources");
const UsersTable_1 = require("./Constructs/UsersTable");
const TimelinesTable_1 = require("./Constructs/TimelinesTable");
class DataBaseStack extends cdk.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        this.props = props;
        this.initialize();
    }
    initialize() {
        this.initializeUserTableWithAccess();
        this.initializeTweetsTableWithAccess();
        this.initializeTimeLinesTableWithAccess();
        this.initializeLikesTableWithAccess();
        this.initializeRetweetTableWithAccess();
        this.initializeRelationshipsTableWithAccess();
    }
    initializeUserTableWithAccess() {
        this.usersTable = new UsersTable_1.UsersTable(this, 'UsersTable');
        this.usersTable.table.grantFullAccess(this.props.postConfirmationHook);
    }
    initializeTweetsTableWithAccess() {
        this.tweetsTable = new TweetsTable_1.TweetsTable(this, 'TweetsTable');
        this.tweetsTable.table.grantFullAccess(this.props.distributeTweetWithFollowers);
        this.props.distributedTweet.addEventSource(new eventsources.DynamoEventSource(this.tweetsTable.table, {
            startingPosition: cdk.aws_lambda.StartingPosition.LATEST
        }));
    }
    initializeTimeLinesTableWithAccess() {
        this.timelinesTable = new TimelinesTable_1.TimelinesTable(this, 'TimelinesTable');
        this.timelinesTable.table.grantFullAccess(this.props.distributedTweet);
        this.timelinesTable.table.grantFullAccess(this.props.distributeTweetWithFollowers);
    }
    initializeLikesTableWithAccess() {
        this.likesTable = new LikesTable_1.LikesTable(this, 'LikesTable');
    }
    initializeRetweetTableWithAccess() {
        this.retweetTable = new RetweetsTable_1.RetweetsTable(this, 'RetweetsTable');
    }
    initializeRelationshipsTableWithAccess() {
        this.relationShipsTable = new RelationshipsTable_1.RelationshipsTable(this, 'RelationshipsTable');
        this.relationShipsTable.table.grantFullAccess(this.props.distributedTweet);
        this.relationShipsTable.table.grantFullAccess(this.props.distributeTweetWithFollowers);
        this.props.distributeTweetWithFollowers.addEventSource(new eventsources.DynamoEventSource(this.relationShipsTable.table, {
            startingPosition: cdk.aws_lambda.StartingPosition.LATEST
        }));
    }
}
exports.DataBaseStack = DataBaseStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWJhc2Utc3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkYXRhYmFzZS1zdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3RUFBcUU7QUFDckUsOERBQTJEO0FBQzNELHdEQUFxRDtBQUNyRCwwREFBdUQ7QUFFdkQsbUNBQW1DO0FBQ25DLHFFQUFxRTtBQUVyRSx3REFBcUQ7QUFDckQsZ0VBQTZEO0FBRTdELE1BQWEsYUFBYyxTQUFRLEdBQUcsQ0FBQyxLQUFLO0lBUzFDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBeUI7UUFDakUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLDZCQUE2QixFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLCtCQUErQixFQUFFLENBQUM7UUFDdkMsSUFBSSxDQUFDLGtDQUFrQyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLDhCQUE4QixFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLGdDQUFnQyxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLHNDQUFzQyxFQUFFLENBQUM7SUFDaEQsQ0FBQztJQUVELDZCQUE2QjtRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksdUJBQVUsQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQsK0JBQStCO1FBQzdCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSx5QkFBVyxDQUFDLElBQUksRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUMsNEJBQTRCLENBQ3hDLENBQUM7UUFDRixJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FDeEMsSUFBSSxZQUFZLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUU7WUFDekQsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNO1NBQ3pELENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVELGtDQUFrQztRQUNoQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksK0JBQWMsQ0FBQyxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FDdkMsSUFBSSxDQUFDLEtBQUssQ0FBQyw0QkFBNEIsQ0FDeEMsQ0FBQztJQUNKLENBQUM7SUFFRCw4QkFBOEI7UUFDNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLHVCQUFVLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFDRCxnQ0FBZ0M7UUFDOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLDZCQUFhLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxzQ0FBc0M7UUFDcEMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksdUNBQWtCLENBQzlDLElBQUksRUFDSixvQkFBb0IsQ0FDckIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FDM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyw0QkFBNEIsQ0FDeEMsQ0FBQztRQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsNEJBQTRCLENBQUMsY0FBYyxDQUNwRCxJQUFJLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxFQUFFO1lBQ2hFLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsTUFBTTtTQUN6RCxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXZFRCxzQ0F1RUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWxhdGlvbnNoaXBzVGFibGUgfSBmcm9tICcuL0NvbnN0cnVjdHMvUmVsYXRpb25zaGlwc1RhYmxlJztcbmltcG9ydCB7IFJldHdlZXRzVGFibGUgfSBmcm9tICcuL0NvbnN0cnVjdHMvUmV0d2VldHNUYWJsZSc7XG5pbXBvcnQgeyBMaWtlc1RhYmxlIH0gZnJvbSAnLi9Db25zdHJ1Y3RzL0xpa2VzVGFibGUnO1xuaW1wb3J0IHsgVHdlZXRzVGFibGUgfSBmcm9tICcuL0NvbnN0cnVjdHMvVHdlZXRzVGFibGUnO1xuaW1wb3J0IHsgRGF0YUJhc2VTdGFja1Byb3BzIH0gZnJvbSAnLi8uLi8uLi8uLi9JbnRlcmZhY2VzL2RhdGFiYXNlLWludGVyZmFjZSc7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0ICogYXMgZXZlbnRzb3VyY2VzIGZyb20gJ2F3cy1jZGstbGliL2F3cy1sYW1iZGEtZXZlbnQtc291cmNlcyc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IFVzZXJzVGFibGUgfSBmcm9tICcuL0NvbnN0cnVjdHMvVXNlcnNUYWJsZSc7XG5pbXBvcnQgeyBUaW1lbGluZXNUYWJsZSB9IGZyb20gJy4vQ29uc3RydWN0cy9UaW1lbGluZXNUYWJsZSc7XG5cbmV4cG9ydCBjbGFzcyBEYXRhQmFzZVN0YWNrIGV4dGVuZHMgY2RrLlN0YWNrIHtcbiAgcHVibGljIHVzZXJzVGFibGU6IFVzZXJzVGFibGU7XG4gIHB1YmxpYyB0d2VldHNUYWJsZTogVHdlZXRzVGFibGU7XG4gIHB1YmxpYyB0aW1lbGluZXNUYWJsZTogVGltZWxpbmVzVGFibGU7XG4gIHB1YmxpYyBsaWtlc1RhYmxlOiBMaWtlc1RhYmxlO1xuICBwdWJsaWMgcmV0d2VldFRhYmxlOiBSZXR3ZWV0c1RhYmxlO1xuICBwdWJsaWMgcmVsYXRpb25TaGlwc1RhYmxlOiBSZWxhdGlvbnNoaXBzVGFibGU7XG4gIHB1YmxpYyBwcm9wczogRGF0YUJhc2VTdGFja1Byb3BzO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBEYXRhQmFzZVN0YWNrUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHByb3BzKTtcbiAgICB0aGlzLnByb3BzID0gcHJvcHM7XG4gICAgdGhpcy5pbml0aWFsaXplKCk7XG4gIH1cblxuICBpbml0aWFsaXplKCkge1xuICAgIHRoaXMuaW5pdGlhbGl6ZVVzZXJUYWJsZVdpdGhBY2Nlc3MoKTtcbiAgICB0aGlzLmluaXRpYWxpemVUd2VldHNUYWJsZVdpdGhBY2Nlc3MoKTtcbiAgICB0aGlzLmluaXRpYWxpemVUaW1lTGluZXNUYWJsZVdpdGhBY2Nlc3MoKTtcbiAgICB0aGlzLmluaXRpYWxpemVMaWtlc1RhYmxlV2l0aEFjY2VzcygpO1xuICAgIHRoaXMuaW5pdGlhbGl6ZVJldHdlZXRUYWJsZVdpdGhBY2Nlc3MoKTtcbiAgICB0aGlzLmluaXRpYWxpemVSZWxhdGlvbnNoaXBzVGFibGVXaXRoQWNjZXNzKCk7XG4gIH1cblxuICBpbml0aWFsaXplVXNlclRhYmxlV2l0aEFjY2VzcygpIHtcbiAgICB0aGlzLnVzZXJzVGFibGUgPSBuZXcgVXNlcnNUYWJsZSh0aGlzLCAnVXNlcnNUYWJsZScpO1xuICAgIHRoaXMudXNlcnNUYWJsZS50YWJsZS5ncmFudEZ1bGxBY2Nlc3ModGhpcy5wcm9wcy5wb3N0Q29uZmlybWF0aW9uSG9vayk7XG4gIH1cblxuICBpbml0aWFsaXplVHdlZXRzVGFibGVXaXRoQWNjZXNzKCkge1xuICAgIHRoaXMudHdlZXRzVGFibGUgPSBuZXcgVHdlZXRzVGFibGUodGhpcywgJ1R3ZWV0c1RhYmxlJyk7XG4gICAgdGhpcy50d2VldHNUYWJsZS50YWJsZS5ncmFudEZ1bGxBY2Nlc3MoXG4gICAgICB0aGlzLnByb3BzLmRpc3RyaWJ1dGVUd2VldFdpdGhGb2xsb3dlcnNcbiAgICApO1xuICAgIHRoaXMucHJvcHMuZGlzdHJpYnV0ZWRUd2VldC5hZGRFdmVudFNvdXJjZShcbiAgICAgIG5ldyBldmVudHNvdXJjZXMuRHluYW1vRXZlbnRTb3VyY2UodGhpcy50d2VldHNUYWJsZS50YWJsZSwge1xuICAgICAgICBzdGFydGluZ1Bvc2l0aW9uOiBjZGsuYXdzX2xhbWJkYS5TdGFydGluZ1Bvc2l0aW9uLkxBVEVTVFxuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVRpbWVMaW5lc1RhYmxlV2l0aEFjY2VzcygpIHtcbiAgICB0aGlzLnRpbWVsaW5lc1RhYmxlID0gbmV3IFRpbWVsaW5lc1RhYmxlKHRoaXMsICdUaW1lbGluZXNUYWJsZScpO1xuICAgIHRoaXMudGltZWxpbmVzVGFibGUudGFibGUuZ3JhbnRGdWxsQWNjZXNzKHRoaXMucHJvcHMuZGlzdHJpYnV0ZWRUd2VldCk7XG4gICAgdGhpcy50aW1lbGluZXNUYWJsZS50YWJsZS5ncmFudEZ1bGxBY2Nlc3MoXG4gICAgICB0aGlzLnByb3BzLmRpc3RyaWJ1dGVUd2VldFdpdGhGb2xsb3dlcnNcbiAgICApO1xuICB9XG5cbiAgaW5pdGlhbGl6ZUxpa2VzVGFibGVXaXRoQWNjZXNzKCkge1xuICAgIHRoaXMubGlrZXNUYWJsZSA9IG5ldyBMaWtlc1RhYmxlKHRoaXMsICdMaWtlc1RhYmxlJyk7XG4gIH1cbiAgaW5pdGlhbGl6ZVJldHdlZXRUYWJsZVdpdGhBY2Nlc3MoKSB7XG4gICAgdGhpcy5yZXR3ZWV0VGFibGUgPSBuZXcgUmV0d2VldHNUYWJsZSh0aGlzLCAnUmV0d2VldHNUYWJsZScpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVJlbGF0aW9uc2hpcHNUYWJsZVdpdGhBY2Nlc3MoKSB7XG4gICAgdGhpcy5yZWxhdGlvblNoaXBzVGFibGUgPSBuZXcgUmVsYXRpb25zaGlwc1RhYmxlKFxuICAgICAgdGhpcyxcbiAgICAgICdSZWxhdGlvbnNoaXBzVGFibGUnXG4gICAgKTtcbiAgICB0aGlzLnJlbGF0aW9uU2hpcHNUYWJsZS50YWJsZS5ncmFudEZ1bGxBY2Nlc3ModGhpcy5wcm9wcy5kaXN0cmlidXRlZFR3ZWV0KTtcbiAgICB0aGlzLnJlbGF0aW9uU2hpcHNUYWJsZS50YWJsZS5ncmFudEZ1bGxBY2Nlc3MoXG4gICAgICB0aGlzLnByb3BzLmRpc3RyaWJ1dGVUd2VldFdpdGhGb2xsb3dlcnNcbiAgICApO1xuICAgIHRoaXMucHJvcHMuZGlzdHJpYnV0ZVR3ZWV0V2l0aEZvbGxvd2Vycy5hZGRFdmVudFNvdXJjZShcbiAgICAgIG5ldyBldmVudHNvdXJjZXMuRHluYW1vRXZlbnRTb3VyY2UodGhpcy5yZWxhdGlvblNoaXBzVGFibGUudGFibGUsIHtcbiAgICAgICAgc3RhcnRpbmdQb3NpdGlvbjogY2RrLmF3c19sYW1iZGEuU3RhcnRpbmdQb3NpdGlvbi5MQVRFU1RcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIl19